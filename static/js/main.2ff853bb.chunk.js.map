{"version":3,"sources":["logic/renderFood.ts","initialState/initialState.ts","reducers/reducer.ts","Context/Context.ts","components/AppComponent/AppComponent.tsx","components/AppComponent/Box/Food/Food.tsx","components/AppComponent/Box/Snake/Dot/Dot.tsx","components/AppComponent/Box/Snake/Snake.tsx","components/AppComponent/Box/Box.tsx","components/AppComponent/Score/Score.tsx","components/AppComponent/Box/StartScreen/StartScreen.tsx","App.tsx","index.tsx"],"names":["renderFood","x","Math","floor","random","y","initialState","direction","snakeDotsPos","food","loss","currentScore","highestScore","speed","reducer","state","action","type","undefined","payload","snakeDots","lossPayload","Context","createContext","AppComponent","children","className","Food","useContext","style","left","top","icon","faAppleAlt","Dot","dot","Snake","map","index","Box","Score","StartScreen","dispatch","faTrophy","onClick","faPlay","App","moveSnake","head","length","tail","push","shift","AfterMeal","unshift","borderBoolen","slice","filter","item","checkLoss","keyDown","event","keyCode","console","log","useReducer","useEffect","TimeoutMoveSnake","setTimeout","clearTimeout","document","onkeydown","Provider","value","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ff853bb.chunk.js","sourcesContent":["export const renderFood = () => {\r\n   let x = Math.floor(Math.random() * 96);\r\n   let y = Math.floor(Math.random() * 96);\r\n   while (x % 4 !== 0) {\r\n      x = Math.floor(Math.random() * 96);\r\n   }\r\n   while (y % 4 !== 0) {\r\n      y = Math.floor(Math.random() * 96);\r\n   }\r\n   return [x, y];\r\n};\r\n","import { renderFood } from \"../logic/renderFood\";\r\n\r\nconst initialState = {\r\n   direction: \"RIGHT\",\r\n   snakeDotsPos: [\r\n      [8, 48],\r\n      [12, 48],\r\n      [16, 48],\r\n   ],\r\n   food: renderFood(),\r\n   loss: false,\r\n   currentScore: 0,\r\n   highestScore: 0,\r\n   speed: 140,\r\n};\r\n\r\nexport default initialState;\r\n","import { stateInterface, actionInterface } from \"../interfaces/interfaces\";\r\nimport { renderFood } from \"../logic/renderFood\";\r\nimport initialState from \"../initialState\";\r\n\r\nfunction reducer(\r\n   state: stateInterface,\r\n   action: actionInterface\r\n): stateInterface {\r\n   switch (action.type) {\r\n      case \"CHANGE_DIRECTION\":\r\n         return {\r\n            ...state,\r\n            direction: action.payload === undefined ? \"\" : action.payload,\r\n         };\r\n      case \"MOVE_SNAKE\":\r\n         return {\r\n            ...state,\r\n            snakeDotsPos:\r\n               action.snakeDots === undefined\r\n                  ? [\r\n                       [0, 0],\r\n                       [4, 0],\r\n                       [8, 0],\r\n                    ]\r\n                  : action.snakeDots,\r\n         };\r\n      case \"RENDER_FOOD\":\r\n         return { ...state, food: renderFood() };\r\n      case \"SET_LOSS\":\r\n         return {\r\n            ...state,\r\n            loss: action.lossPayload === undefined ? false : action.lossPayload,\r\n         };\r\n      case \"ADD_SCORE\":\r\n         return {\r\n            ...state,\r\n            currentScore: state.currentScore + 100,\r\n         };\r\n      case \"SET_HIGHEST_SCORE\":\r\n         return {\r\n            ...state,\r\n            highestScore: state.currentScore,\r\n         };\r\n      case \"SET_SPEED\":\r\n         return {\r\n            ...state,\r\n            speed: state.speed - 10,\r\n         };\r\n      case \"RESET_GAME\":\r\n         return {\r\n            ...initialState,\r\n            loss: false,\r\n            highestScore: state.highestScore,\r\n         };\r\n      default:\r\n         return { ...state };\r\n   }\r\n}\r\n\r\nexport default reducer;\r\n\r\n// ...state,\r\n// currentScore: initialState.currentScore,\r\n// speed: initialState.speed,\r\n// loss: false,\r\n// snakeDotsPos: initialState.snakeDotsPos,\r\n// direction: initialState.direction,\r\n// food: initialState.food,\r\n","import { createContext } from \"react\";\r\n\r\nimport initialState from \"../initialState\";\r\n\r\nconst Context = createContext(initialState);\r\n\r\nexport default Context;\r\n","import { childrenPropsInterface } from \"../../interfaces/interfaces\";\r\n\r\nconst AppComponent = ({ children }: childrenPropsInterface) => (\r\n   <div className=\"app\">{children}</div>\r\n);\r\n\r\nexport default AppComponent;\r\n","import { useContext } from \"react\";\r\nimport Context from \"../../../../Context\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAppleAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Food = () => {\r\n   const { food } = useContext(Context);\r\n   return (\r\n      <div\r\n         className=\"food\"\r\n         style={{\r\n            left: `${food[0]}%`,\r\n            top: `${food[1]}%`,\r\n         }}\r\n      >\r\n         <FontAwesomeIcon icon={faAppleAlt} />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Food;\r\n","import { dotInterface } from \"../../../../../interfaces/interfaces\";\r\n\r\nconst Dot = ({ dot }: dotInterface) => (\r\n   <div\r\n      className=\"dot\"\r\n      style={{\r\n         left: `${dot[0]}%`,\r\n         top: `${dot[1]}%`,\r\n      }}\r\n   ></div>\r\n);\r\n\r\nexport default Dot;\r\n","import { useContext } from \"react\";\r\n\r\nimport Context from \"../../../../Context\";\r\nimport Dot from \"./Dot\";\r\n\r\nconst Snake = () => {\r\n   const { snakeDotsPos } = useContext(Context);\r\n\r\n   return (\r\n      <>\r\n         {snakeDotsPos !== undefined &&\r\n            snakeDotsPos.map((dot, index) => (\r\n               <Dot key={`${dot[0]}${dot[1]}${index}`} dot={dot} />\r\n            ))}\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Snake;\r\n","import { childrenPropsInterface } from \"../../../interfaces/interfaces\";\r\n\r\nconst Box = ({ children }: childrenPropsInterface) => (\r\n   <div className=\"box\">{children}</div>\r\n);\r\n\r\nexport default Box;\r\n","import { useContext } from \"react\";\r\nimport Context from \"../../../Context\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAppleAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Score = () => {\r\n   const { currentScore } = useContext(Context);\r\n   return (\r\n      <div className=\"score\">\r\n         <FontAwesomeIcon icon={faAppleAlt} />\r\n         {currentScore}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Score;\r\n","import { useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n   faAppleAlt,\r\n   faTrophy,\r\n   faPlay,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Context from \"../../../../Context\";\r\n\r\nimport { dispatchInterface } from \"../../../../interfaces/interfaces\";\r\n\r\nconst StartScreen = ({ dispatch }: dispatchInterface) => {\r\n   const { currentScore, highestScore } = useContext(Context);\r\n\r\n   const handlePlay = () => {\r\n      dispatch({ type: \"RESET_GAME\" });\r\n   };\r\n\r\n   return (\r\n      <div className=\"start-screen\">\r\n         <div className=\"wrapper\">\r\n            <div className=\"current-score\">\r\n               <FontAwesomeIcon icon={faAppleAlt} /> {currentScore}\r\n            </div>\r\n            <div className=\"highest-score\">\r\n               <FontAwesomeIcon icon={faTrophy} /> {highestScore}\r\n            </div>\r\n         </div>\r\n         <button className=\"play\" onClick={handlePlay}>\r\n            <FontAwesomeIcon icon={faPlay} />\r\n            Zagraj\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default StartScreen;\r\n","import { useEffect, useReducer } from \"react\";\n\nimport reducer from \"./reducers\";\n\nimport initialState from \"./initialState\";\nimport Context from \"./Context\";\n\nimport AppComponent from \"./components/AppComponent\";\nimport Food from \"./components/AppComponent/Box/Food\";\nimport Snake from \"./components/AppComponent/Box/Snake\";\nimport Box from \"./components/AppComponent/Box\";\nimport Score from \"./components/AppComponent/Score\";\n\nimport \"./App.css\";\nimport StartScreen from \"./components/AppComponent/Box/StartScreen\";\n\nconst App = () => {\n   const checkLoss = (snakeDotsPos: number[][]) => {\n      const snakeDots = [...snakeDotsPos];\n      const head = snakeDots[snakeDots.length - 1];\n\n      const borderBoolen =\n         head[0] > 96 || head[0] < 0 || head[1] > 96 || head[1] < 0;\n      const checkTable = snakeDots\n         .slice(0, snakeDots.length - 1)\n         .filter((item) => item[0] === head[0] && item[1] === head[1]).length;\n\n      if (checkTable || borderBoolen) {\n         dispatch({ type: \"SET_LOSS\", lossPayload: true });\n      }\n   };\n\n   const AfterMeal = (\n      snakeDotsPos: number[][],\n      currentScore: number,\n      highestScore: number,\n      speed: number\n   ) => {\n      dispatch({ type: \"ADD_SCORE\" });\n      speed !== 60 &&\n         (snakeDotsPos.length + 1) % 5 === 0 &&\n         dispatch({ type: \"SET_SPEED\" });\n      currentScore >= highestScore && dispatch({ type: \"SET_HIGHEST_SCORE\" });\n   };\n\n   const moveSnake = (\n      direction: string,\n      snakeDotsPos: number[][],\n      food: number[],\n      currentScore: number,\n      highestScore: number,\n      speed: number\n   ) => {\n      const snakeDots = [...snakeDotsPos];\n      let head = snakeDots[snakeDots.length - 1];\n      let tail = snakeDots[0];\n      switch (direction) {\n         case \"RIGHT\":\n            head = [head[0] + 4, head[1]];\n            break;\n\n         case \"LEFT\":\n            head = [head[0] - 4, head[1]];\n            break;\n\n         case \"UP\":\n            head = [head[0], head[1] - 4];\n            break;\n\n         case \"DOWN\":\n            head = [head[0], head[1] + 4];\n            break;\n\n         default:\n            break;\n      }\n      snakeDots.push(head);\n      snakeDots.shift();\n\n      if (head[0] === food[0] && head[1] === food[1]) {\n         AfterMeal(snakeDots, currentScore, highestScore, speed);\n         dispatch({ type: \"RENDER_FOOD\" });\n         snakeDots.unshift(tail);\n      }\n      checkLoss(snakeDotsPos);\n      dispatch({ type: \"MOVE_SNAKE\", snakeDots: snakeDots });\n   };\n\n   const keyDown = (event: KeyboardEventInit) => {\n      switch (event.keyCode) {\n         case 37:\n            if (state.direction !== \"RIGHT\") {\n               dispatch({ type: \"CHANGE_DIRECTION\", payload: \"LEFT\" });\n               console.log(event);\n            }\n            break;\n         case 38:\n            if (state.direction !== \"DOWN\") {\n               dispatch({ type: \"CHANGE_DIRECTION\", payload: \"UP\" });\n            }\n            break;\n         case 39:\n            if (state.direction !== \"LEFT\") {\n               dispatch({ type: \"CHANGE_DIRECTION\", payload: \"RIGHT\" });\n            }\n            break;\n         case 40:\n            if (state.direction !== \"UP\") {\n               dispatch({ type: \"CHANGE_DIRECTION\", payload: \"DOWN\" });\n            }\n            break;\n         default:\n            break;\n      }\n   };\n\n   const [state, dispatch] = useReducer(reducer, initialState);\n\n   const {\n      direction,\n      snakeDotsPos,\n      food,\n      loss,\n      currentScore,\n      highestScore,\n      speed,\n   } = state;\n\n   useEffect(() => {\n      const TimeoutMoveSnake = setTimeout(\n         () =>\n            moveSnake(\n               direction,\n               snakeDotsPos,\n               food,\n               currentScore,\n               highestScore,\n               speed\n            ),\n         speed\n      );\n      loss && clearTimeout(TimeoutMoveSnake);\n   }, [snakeDotsPos]);\n\n   useEffect(() => {\n      document.onkeydown = keyDown;\n   });\n\n   return (\n      <Context.Provider value={state}>\n         <AppComponent>\n            <Score />\n            <Box>\n               {loss && <StartScreen dispatch={dispatch} />}\n               <Snake />\n               <Food />\n            </Box>\n         </AppComponent>\n      </Context.Provider>\n   );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}